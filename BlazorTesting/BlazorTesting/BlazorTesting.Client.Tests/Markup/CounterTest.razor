@inherits TestComponentBase

<SnapshotTest Description="Counter component should initialize with counter zero">
    <TestInput>
        <Counter />
    </TestInput>
    <ExpectedOutput>
        <h1>Counter</h1>

        <p>Current count: 0</p>

        <button class="btn btn-primary">Click me</button>
    </ExpectedOutput>
</SnapshotTest>

<Fixture Test="Counter_Component_Should_Initialize_With_Counter_Zero">
    <ComponentUnderTest>
        <Counter />
    </ComponentUnderTest>

    @code {
        void Counter_Component_Should_Initialize_With_Counter_Zero(Fixture fixture)
        {
            var component = fixture.GetComponentUnderTest<Counter>();
            
            var paragraph = component.Find("p");
            paragraph.MarkupMatches("<p>Current count: 0</p>");
        }
    }
</Fixture>

<Fixture Test="Counter_Component_Should_Increment_Current_Count_When_Button_Is_Clicked">
    <ComponentUnderTest>
        <Counter />
    </ComponentUnderTest>

    @code {
        void Counter_Component_Should_Increment_Current_Count_When_Button_Is_Clicked(Fixture fixture)
        {
            var component = fixture.GetComponentUnderTest<Counter>();

            var button = component.Find("button");
            button.Click();

            var paragraph = component.Find("p");
            paragraph.MarkupMatches("<p>Current count: 1</p>");
        }
    }
</Fixture>
